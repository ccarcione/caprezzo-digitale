stages:
  - build
  - deploy

build-api:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/docker/api.dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/caprezzodigitale-api:${CI_COMMIT_TAG}"
#   rules:
#     - if: $CI_COMMIT_TAG =~ /v-/
#     - if: '$CI_COMMIT_BRANCH == "staging"'

# https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
build-site:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/docker/site.dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/caprezzodigitale-site:${CI_COMMIT_TAG}"
#   rules:
#     - if: $CI_COMMIT_TAG =~ /v-/
#     - if: '$CI_COMMIT_BRANCH == "staging"'

deploy-staging:
  stage: deploy
  image: debian
  variables:
    SERVER: "$DEV_SERVER"
    USER: "$DEV_USER"
    PASSWORD: "$DEV_PASSWORD"
    TEMP_FOLDER: "/temp-gitlab/${CI_PROJECT_NAME}"
    IMAGE: registry.gitlab.com/projects-experimenta/caprezzodigitale/caprezzodigitale-api:latest
    IMAGE2: registry.gitlab.com/projects-experimenta/caprezzodigitalecaprezzodigitale-site:latest
    COMPOSEFILE_DIR: docker
    COMPOSEFILE_NAME: docker-compose.staging-cicd.yml
    COMPOSE_PROJECT_NAME: caprezzodigitale-staging
  before_script:
    - echo "install utils"
    - apt-get update -qy
    - apt-get install -y lftp sshpass openssh-client
    - echo "SSH add trust host"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $SERVER >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - echo "LFTP fix trust host"
    - mkdir ~/.lftp
    - echo "set ssl:verify-certificate no" >> ~/.lftp/rc
  script:
    - echo "update docker image"
    - sshpass -p $PASSWORD ssh $USER@$SERVER docker pull $IMAGE
    - sshpass -p $PASSWORD ssh $USER@$SERVER docker pull $IMAGE2
    - echo "create gitlab temp directory..."
    - echo "copy docker-compose files into gitlab temp directory..."
    - >-
      lftp -e "set ftp:ssl-protect-data true ;
      rmdir $TEMP_FOLDER ;
      mkdir $TEMP_FOLDER ;
      put -O $TEMP_FOLDER ${CI_PROJECT_DIR}/$COMPOSEFILE_DIR/$COMPOSEFILE_NAME ;
      exit"
      -u $USER,$PASSWORD sftp://$SERVER
    - echo "update docker container"
    - sshpass -p $PASSWORD ssh $USER@$SERVER docker-compose --file $TEMP_FOLDER/$COMPOSEFILE_NAME --project-name $COMPOSE_PROJECT_NAME up -d
    - echo "clean temp directory"
    - sshpass -p $PASSWORD ssh $USER@$SERVER rm -R $TEMP_FOLDER
#   rules:
#     - if: '$CI_COMMIT_BRANCH == "staging"'

# deploy-production:
#   stage: deploy
#   image: debian
#   variables:
#     SERVER: "$CAPREZZODIGITALE_SERVER"
#     USER: "$CAPREZZODIGITALE_USER"
#     PASSWORD: "$CAPREZZODIGITALE_PASSWORD"
#     TEMP_FOLDER: "/temp-gitlab/${CI_PROJECT_NAME}"
#     IMAGE: registry.gitlab.com/projects-experimenta/caprezzodigitale/caprezzodigitale-api:latest
#     IMAGE2: registry.gitlab.com/projects-experimenta/caprezzodigitalecaprezzodigitale-site:latest
#     COMPOSEFILE_DIR: docker
#     COMPOSEFILE_NAME: docker-compose.prod-cicd.yml
#     COMPOSE_PROJECT_NAME: caprezzodigitale-production
#   before_script:
#     - echo "install utils"
#     - apt-get update -qy
#     - apt-get install -y lftp sshpass openssh-client
#     - echo "SSH add trust host"
#     - mkdir -p ~/.ssh
#     - chmod 700 ~/.ssh
#     - ssh-keyscan -H $SERVER >> ~/.ssh/known_hosts
#     - chmod 644 ~/.ssh/known_hosts
#     - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
#     - echo "LFTP fix trust host"
#     - mkdir ~/.lftp
#     - echo "set ssl:verify-certificate no" >> ~/.lftp/rc
#   script:
#     - echo "update docker image"
#     - sshpass -p $PASSWORD ssh $USER@$SERVER docker pull $IMAGE
#     - sshpass -p $PASSWORD ssh $USER@$SERVER docker pull $IMAGE2
#     - echo "create gitlab temp directory..."
#     - echo "copy docker-compose files into gitlab temp directory..."
#     - >-
#       lftp -e "set ftp:ssl-protect-data true ;
#       rmdir $TEMP_FOLDER ;
#       mkdir $TEMP_FOLDER ;
#       put -O $TEMP_FOLDER ${CI_PROJECT_DIR}/$COMPOSEFILE_DIR/$COMPOSEFILE_NAME ;
#       exit"
#       -u $USER,$PASSWORD sftp://$SERVER
#     - echo "update docker container"
#     - sshpass -p $PASSWORD ssh $USER@$SERVER docker-compose --file $TEMP_FOLDER/$COMPOSEFILE_NAME --project-name $COMPOSE_PROJECT_NAME up -d
#     - echo "clean temp directory"
#     - sshpass -p $PASSWORD ssh $USER@$SERVER rm -R $TEMP_FOLDER
#   rules:
#     - if: $CI_COMMIT_TAG =~ /v-/